#### План автоматизации

## Используемые валидные данные при заполнении полей:
- номер карты: 16 цифровых символов
- месяц: 01-12, но не ранее текущего месяца в случае, если указан текущий год
- год: последние две цифры порядкового номера года, не ранее текущего года
- владелец: буквенные символы латинского алфавита, количество от 1 до 32, с апострофом, с дефисом
- CVC: 3 цифровых символа.
## Карты предоставленные для тестирования:
1. 4444 4444 4444 4441, status: APPROVED
2.4444 4444 4444 4442, status: DECLINED

# Позитивные сценарии оплаты по карте:
1. Дебетовая карта со статусом APPROVED
- зайти на страницу покупки
- нажать кнопку "купить"
- вводим валидные данные плательщика
- кнопка продолжить
Ожидаемый результат: Оплата прошла успешно, банк одобрил операцию. Появилось уведомление об успешной оплате с текстом "Успешно! Данные отправлены в базу данных, появилась запись со статусом одобрена.

2. Кредитная карта со статусом APPROVED
- зайти на страницу покупки
- нажать кнопку "Купить в кредит"
- вводим валидные данные плательщика
- кнопка продолжить
Ожидаемый результат: Оплата прошла успешно, банк одобрил операцию. Появилось уведомление об успешной оплате с текстом "Успешно! Данные отправлены в базу данных, появилась запись со статусом одобрена.
<<<<<<< HEAD

#Негативные сценарии оплаты по карте:
=======
# Негативные сценарии оплаты по карте:
>>>>>>> a48dd21d80f3691f1481117f2a0324f462e9f6f7
1. Дебетовая карта со статусом DECLINED
- зайти на страницу покупки
- нажать кнопку "Купить"
- вводим валидные данные плательщика
- кнопка продолжить
Ожидаемый результат: Оплата не прошла, банк операцию отклонил. Появилось всплывающее окно с текстом "Ошибка! Отказ в проведении операции". Данные отправлены в базу данных, появилась запись со статусом отклонена.

2. Кредитная карта со статусом DECLINED
- зайти на страницу покупки
- нажать кнопку "Купить в кредит"
- вводим валидные данные плательщика
- кнопка продолжить
Ожидаемый результат: Оплата не прошла, банк операцию отклонил. Появилось всплывающее окно с текстом "Ошибка! Отказ в проведении операции". Данные отправлены в базу данных, появилась запись со статусом отклонена.

3. Указан невалидный номер, дебетовой карты
- зайти на страницу покупки
- нажать кнопку "Купить"
- вводим валидные, а номера карты невалидные данные
  (буквенные значения, спецсимволы, с дефисом, апострофом)
Ожидаемый результат: кнопка «продолжить» не активна.

4. Указан невалидный номер, кредитной карты
- зайти на страницу покупки
- нажать кнопку "Купить в кредит"
- вводим валидные, а номера карты невалидные данные
  (буквенные значения, спецсимволы, с дефисом, апострофом)
Ожидаемый результат: кнопка «продолжить» не активна.

5. Дебетовая карта с истекшим сроком действия
- зайти на страницу покупки
- нажать кнопку "Купить"
- вводим валидные данные плательщика
- кнопка «продолжить»
Ожидаемый результат: под полем появилось сообщение об ошибке "Неверно указан срок действия карты",в БД новая запись не появилась.

6. Введение не валидного месяца карты
- зайти на страницу покупки
- нажать кнопку "Купить"
- вводим невалидные, месяц (число 13, 14 и прошедший месяц настоящего года)
Ожидаемый результат: под полем появилось сообщение об ошибке "Неверно указан срок действия карты",
в БД новая запись не появилась

7. Введение не валидного года карты
- зайти на страницу покупки
- нажать кнопку "Купить"
- вводим невалидные год
Ожидаемый результат: под полем появилось сообщение об ошибке "Неверно указан срок действия карты",
в БД новая запись не появилась

8. Кредитная карта с истекшим сроком действия
- зайти на страницу покупки
- нажать кнопку "Купить в кредит"
- вводим валидные данные платильщика
- кнопка продолжить
Ожидаемый результат: под полем появилось сообщение об ошибке "Неверно указан срок действия карты",
в БД новая запись не появилась

9. Неверное значение в поле Владелец, дебетовой картой
- зайти на страницу покупки
- нажать кнопку "Купить"
- вводим валидные, а поле Владелец невалидные данные (кирилица, спецсимволы, эмодзи, цифры)
- кнопка продолжить
Ожидаемый результат: под полем появилось сообщение об ошибке "Неверно введены данные",
в БД новая запись не появилась

10. Граничное значение в поле Владелец, дебетовой картой
- зайти на страницу покупки
- нажать кнопку "Купить"
- вводим валидные, но количество в поле Владелец (63,64,65,66 символа)
Ожидаемый результат: не дает ввести более 64 символов

11. Неверное значение в поле Владелец, кредитной картой(кирилица, спецсимволы, эмодзи, цифры)
- зайти на страницу покупки
- нажать кнопку "Купить в кредит"
- вводим невалидные данные платильщика
- кнопка продолжить
Ожидаемый результат: под полем появилось сообщение об ошибке "Неверно введены данные",
в БД новая запись не появилась

12. некорректное значение в поле CVC/CVV, дебетовой карты
- зайти на страницу покупки
- нажать кнопку "Купить"
- вводим невалидные данные CVC/CVV
- кнопка продолжить
Ожидаемый результат: под полем появилось сообщение об ошибке "Неверно введены данные",
в БД новая запись не появилась

13. некорректное значение в поле CVC/CVV, кредитной карты
- зайти на страницу покупки
- нажать кнопку "Купить в кредит"
- вводим невалидные данные CVC/CVV
- кнопка продолжить
Ожидаемый результат: под полем появилось сообщение об ошибке "Неверно введены данные",
в БД новая запись не появилась

14. Пустая форма заявки
- зайти на страницу покупки
- нажать кнопку "Купить"
- нажать кнопка продолжить
Ожидаемый результат: кнопка продолжить не кликабельна, под полями появилось сообщение об ошибке
"Обязательно для заполнения", в БД новая запись не появилась

## Используемые инструменты

1. JAVA **OpenJDK 11 и выше - т.к. используем инструменты работающие на JAVA (язык программирования);
2. IDE** intelliJ IDEA - инструмент дающий возможность одновременно работать команде, с возможностью
   кооректировки. обладает интуитивным интерфейсом, поддерживает все необходимые инструменты;
3. JUnit 5 (желательно) - инструмент тестирования, обладающий большим потенциалом
4. Gradle - система автоматизации сборки и управления зависимостями, позволяющий получать отчеты
5. Selenide - фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver,
   более удобный и простой в использовании, чем Selenium;
6. Faker - генерирует данные, приближенные к реальным.
7. Подключение к БД, с установленым одним из видов SQL(по необходимости запросов из БД)
8. DBeaver или Консольный клиент, для просмотра базы данных, если такое необходимо и создания запросов
9. Git и GitHub - для полноценной работы с фейморками и хранения автотестов
10. Docker Compose - инструмент, позволяющий запускать мультиконтейнерные приложения, чтобы
    не устанавливать на компьютер необходимые для работы приложения Node.js и СУБД;
11. Allure - фреймворк, предназначенный для создания отчетов, более наглядных, чем у Gradle;
12. Lombok- библиотека для сокращения количества шаблонного кода, для объявления локальной переменной
    вместо указания реального типа;

##  Риски при автоматизации
+ Изменение на странице может привести к падению тестов и необходимости их дальнейшего исправления;
+ При отсутствии уникальных локаторов, усложняет написание и поддержку тестов;
+ Искажение результатов тестов в связи с отсутствием доступа к реальной БД и использовании Facker;
+ Неоправданная стоимость автоматизации;

## Интервальная оценка с учётом рисков (в часах)

+ подготовка окружения, инфраструктуры, развертывание БД - 24 часов;
+ написание автотестов, тестирование и отладка автотестов - 72 часа;
+ формирование и анализ отчетов - 24 часов;

## План сдачи работ
1. Подготовка - не позднее 6.08.2023 года
2. Разработка и прогон тестов - не позднее 16.08.2023 года
3. Отчет - не позднее 19.08.2023 года
